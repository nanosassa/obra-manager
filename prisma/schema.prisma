generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model archivos {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  entidad_tipo    String    @db.VarChar(50)
  entidad_id      String    @db.Uuid
  nombre_original String    @db.VarChar(255)
  nombre_archivo  String    @db.VarChar(255)
  ruta_archivo    String
  tamano_bytes    BigInt?
  tipo_mime       String?   @db.VarChar(100)
  hash_archivo    String?   @db.VarChar(64)
  descripcion     String?
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  deleted_at      DateTime? @db.Timestamp(6)

  @@index([deleted_at], map: "idx_archivos_deleted")
  @@index([entidad_tipo, entidad_id], map: "idx_archivos_entidad")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model avances_obra {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proyecto_obra_id    String                @db.Uuid
  descripcion         String
  monto_presupuestado Decimal?              @db.Decimal(15, 2)
  porcentaje_avance   Decimal?              @db.Decimal(5, 2)
  notas               String?
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  deleted_at          DateTime?             @db.Timestamp(6)
  proveedor           String                @db.VarChar(100)
  proyectos_obra      proyectos_obra        @relation(fields: [proyecto_obra_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  gastos_avances_obra gastos_avances_obra[]

  @@index([proyecto_obra_id], map: "idx_avances_proyecto")
}

model categorias_gasto {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre      String    @unique @db.VarChar(100)
  descripcion String?
  activo      Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  gastos      gastos[]
}

model estados_pago {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre      String    @unique @db.VarChar(50)
  descripcion String?
  activo      Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  gastos      gastos[]
}

model gastos {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proyecto_obra_id    String                @db.Uuid
  fecha               DateTime              @db.Date
  descripcion         String
  categoria_id        String                @db.Uuid
  proveedor_id        String?               @db.Uuid
  monto               Decimal               @db.Decimal(15, 2)
  pago_persona_id     String?               @db.Uuid
  estado_id           String                @db.Uuid
  metodo_pago_id      String?               @db.Uuid
  presupuesto_id      String?               @db.Uuid
  numero_comprobante  String?               @db.VarChar(100)
  notas               String?
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  deleted_at          DateTime?             @db.Timestamp(6)
  categorias_gasto    categorias_gasto      @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estados_pago        estados_pago          @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  metodos_pago        metodos_pago?         @relation(fields: [metodo_pago_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  personas            personas?             @relation(fields: [pago_persona_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  presupuestos        presupuestos?         @relation(fields: [presupuesto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  proveedores         proveedores?          @relation(fields: [proveedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  proyectos_obra      proyectos_obra        @relation(fields: [proyecto_obra_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  gastos_avances_obra gastos_avances_obra[]

  @@index([categoria_id], map: "idx_gastos_categoria")
  @@index([deleted_at], map: "idx_gastos_deleted")
  @@index([estado_id], map: "idx_gastos_estado")
  @@index([fecha], map: "idx_gastos_fecha")
  @@index([proveedor_id], map: "idx_gastos_proveedor")
  @@index([proyecto_obra_id], map: "idx_gastos_proyecto")
  @@index([proyecto_obra_id, fecha], map: "idx_gastos_proyecto_fecha")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model gastos_avances_obra {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  gasto_id       String       @db.Uuid
  avance_obra_id String       @db.Uuid
  monto_asignado Decimal      @db.Decimal(15, 2)
  notas          String?
  created_at     DateTime?    @default(now()) @db.Timestamp(6)
  updated_at     DateTime?    @default(now()) @db.Timestamp(6)
  avances_obra   avances_obra @relation(fields: [avance_obra_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  gastos         gastos       @relation(fields: [gasto_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([gasto_id, avance_obra_id])
  @@index([avance_obra_id], map: "idx_gastos_avances_avance")
  @@index([gasto_id], map: "idx_gastos_avances_gasto")
  @@index([monto_asignado], map: "idx_gastos_avances_monto")
}

model metodos_pago {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre      String    @unique @db.VarChar(100)
  descripcion String?
  activo      Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  gastos      gastos[]
}

model personas {
  id             String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre         String           @db.VarChar(100)
  apellido       String?          @db.VarChar(100)
  email          String?          @unique @db.VarChar(150)
  telefono       String?          @db.VarChar(20)
  activo         Boolean?         @default(true)
  created_at     DateTime?        @default(now()) @db.Timestamp(6)
  updated_at     DateTime?        @default(now()) @db.Timestamp(6)
  deleted_at     DateTime?        @db.Timestamp(6)
  gastos         gastos[]
  presupuestos   presupuestos[]
  proyectos_obra proyectos_obra[]
}

model presupuestos {
  id                 String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proyecto_obra_id   String         @db.Uuid
  numero_presupuesto String?        @db.VarChar(50)
  proveedor_id       String?        @db.Uuid
  descripcion        String
  monto_total        Decimal        @db.Decimal(15, 2)
  fecha_presupuesto  DateTime       @db.Date
  fecha_vencimiento  DateTime?      @db.Date
  estado             String?        @default("PENDIENTE") @db.VarChar(50)
  responsable_id     String?        @db.Uuid
  notas              String?
  created_at         DateTime?      @default(now()) @db.Timestamp(6)
  updated_at         DateTime?      @default(now()) @db.Timestamp(6)
  deleted_at         DateTime?      @db.Timestamp(6)
  gastos             gastos[]
  proveedores        proveedores?   @relation(fields: [proveedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  proyectos_obra     proyectos_obra @relation(fields: [proyecto_obra_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  personas           personas?      @relation(fields: [responsable_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([fecha_presupuesto], map: "idx_presupuestos_fecha")
  @@index([proveedor_id], map: "idx_presupuestos_proveedor")
  @@index([proyecto_obra_id], map: "idx_presupuestos_proyecto")
}

model proveedores {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre          String         @db.VarChar(200)
  razon_social    String?        @db.VarChar(200)
  cuit            String?        @db.VarChar(15)
  direccion       String?
  telefono        String?        @db.VarChar(20)
  email           String?        @db.VarChar(150)
  contacto_nombre String?        @db.VarChar(100)
  activo          Boolean?       @default(true)
  created_at      DateTime?      @default(now()) @db.Timestamp(6)
  updated_at      DateTime?      @default(now()) @db.Timestamp(6)
  deleted_at      DateTime?      @db.Timestamp(6)
  gastos          gastos[]
  presupuestos    presupuestos[]
}

model proyectos_obra {
  id                 String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre             String         @db.VarChar(200)
  descripcion        String?
  fecha_inicio       DateTime?      @db.Date
  fecha_fin_estimada DateTime?      @db.Date
  fecha_fin_real     DateTime?      @db.Date
  presupuesto_total  Decimal?       @db.Decimal(15, 2)
  responsable_id     String?        @db.Uuid
  activo             Boolean?       @default(true)
  created_at         DateTime?      @default(now()) @db.Timestamp(6)
  updated_at         DateTime?      @default(now()) @db.Timestamp(6)
  deleted_at         DateTime?      @db.Timestamp(6)
  avances_obra       avances_obra[]
  gastos             gastos[]
  presupuestos       presupuestos[]
  personas           personas?      @relation(fields: [responsable_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([activo], map: "idx_proyectos_activo")
  @@index([responsable_id], map: "idx_proyectos_responsable")
}
